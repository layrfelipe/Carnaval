{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('leaflet')) : typeof define === 'function' && define.amd ? define(['leaflet'], factory) : factory(global.L);\n})(this, function (L) {\n  'use strict';\n\n  L.Icon.Default.mergeOptions({\n    // Erase default options, so that they can be overridden by _initializeOptions if not supplied.\n    iconUrl: null,\n    iconRetinaUrl: null,\n    shadowUrl: null,\n    iconSize: null,\n    iconAnchor: null,\n    popupAnchor: null,\n    tooltipAnchor: null,\n    shadowSize: null,\n    // @option classNamePrefix: String = 'leaflet-default-icon-'\n    // Prefix for the classes defined in CSS that contain the Icon options.\n    // See the leaflet-defaulticon-compatibility.css file as a starter.\n    // Expected suffixes are \"icon\", \"shadow\", \"popup\" and \"tooltip\".\n    classNamePrefix: 'leaflet-default-icon-'\n  });\n  L.Icon.Default.include({\n    _needsInit: true,\n    // Override to make sure options are retrieved from CSS.\n    _getIconUrl: function (name) {\n      // @option imagePath: String\n      // `Icon.Default` will try to auto-detect the location of\n      // the blue icon images. If you are placing these images in a\n      // non-standard way, set this option to point to the right\n      // path, before any marker is added to a map.\n      // Caution: do not use this option with inline base64 image(s).\n      var imagePath = this.options.imagePath || L.Icon.Default.imagePath || ''; // Deprecated (IconDefault.imagePath), backwards-compatibility only\n\n      if (this._needsInit) {\n        // Modifying imagePath option after _getIconUrl has been called\n        // once in this instance of IconDefault will no longer have any\n        // effect.\n        this._initializeOptions(imagePath);\n      }\n\n      return imagePath + L.Icon.prototype._getIconUrl.call(this, name);\n    },\n    // Initialize all necessary options for this instance.\n    _initializeOptions: function (imagePath) {\n      this._setOptions('icon', _detectIconOptions, imagePath);\n\n      this._setOptions('shadow', _detectIconOptions, imagePath);\n\n      this._setOptions('popup', _detectDivOverlayOptions);\n\n      this._setOptions('tooltip', _detectDivOverlayOptions);\n\n      this._needsInit = false;\n    },\n    // Retrieve values from CSS and assign to this instance options.\n    _setOptions: function (name, detectorFn, imagePath) {\n      var options = this.options,\n          prefix = options.classNamePrefix,\n          optionValues = detectorFn(prefix + name, imagePath);\n\n      for (var optionName in optionValues) {\n        options[name + optionName] = options[name + optionName] || optionValues[optionName];\n      }\n    }\n  }); // Retrieve icon option values from CSS (icon or shadow).\n\n  function _detectIconOptions(className, imagePath) {\n    var el = L.DomUtil.create('div', className, document.body),\n        urlsContainer = _getBkgImageOrCursor(el),\n        urls = _extractUrls(urlsContainer, imagePath),\n        iconX = _getStyleInt(el, 'width'),\n        iconY = _getStyleInt(el, 'height'),\n        anchorNX = _getStyleInt(el, 'margin-left'),\n        anchorNY = _getStyleInt(el, 'margin-top');\n\n    el.parentNode.removeChild(el);\n    return {\n      Url: urls[0],\n      RetinaUrl: urls[1],\n      Size: [iconX, iconY],\n      Anchor: [-anchorNX, -anchorNY]\n    };\n  } // Retrieve anchor option values from CSS (popup or tooltip).\n\n\n  function _detectDivOverlayOptions(className) {\n    var el = L.DomUtil.create('div', className, document.body),\n        anchorX = _getStyleInt(el, 'margin-left'),\n        anchorY = _getStyleInt(el, 'margin-top');\n\n    el.parentNode.removeChild(el);\n    return {\n      Anchor: [anchorX, anchorY]\n    };\n  } // Read the CSS url (could be path or inline base64), may be multiple.\n  // First: normal icon\n  // Second: Retina icon\n\n\n  function _extractUrls(urlsContainer, imagePath) {\n    var re = /url\\(['\"]?([^\"']*?)['\"]?\\)/gi,\n        // Match anything between url( and ), possibly with single or double quotes.\n    urls = [],\n        m = re.exec(urlsContainer);\n\n    while (m) {\n      // Keep the entire URL from CSS rule, so that each image can have its own full URL.\n      // Except in the case imagePath is provided: remove the path part (i.e. keep only the file name).\n      urls.push(imagePath ? _stripPath(m[1]) : m[1]);\n      m = re.exec(urlsContainer);\n    }\n\n    return urls;\n  } // Remove anything before the last slash (/) occurrence (inclusive).\n  // Caution: will give unexpected result if url is inline base64 data\n  // => do not specify imagePath in that case!\n\n\n  function _stripPath(url) {\n    return url.substr(url.lastIndexOf('/') + 1);\n  }\n\n  function _getStyleInt(el, style) {\n    return parseInt(_getStyle(el, style), 10);\n  } // Factorize style reading fallback for IE8.\n\n\n  function _getStyle(el, style) {\n    return L.DomUtil.getStyle(el, style) || L.DomUtil.getStyle(el, _kebabToCamelCase(style));\n  } // When Firefox high contrast (colours override) option is enabled,\n  // \"background-image\" is overridden by the browser as \"none\".\n  // In that case, fallback to \"cursor\". But keep \"background-image\"\n  // as primary source because IE expects cursor URL as relative to HTML page\n  // instead of relative to CSS file.\n\n\n  function _getBkgImageOrCursor(el) {\n    var bkgImage = _getStyle(el, 'background-image');\n\n    return bkgImage && bkgImage !== 'none' ? bkgImage : _getStyle(el, 'cursor');\n  } // Convert kebab-case CSS property name to camelCase for IE currentStyle.\n\n\n  function _kebabToCamelCase(prop) {\n    return prop.replace(/-(\\w)/g, function (str, w) {\n      return w.toUpperCase();\n    });\n  }\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","L","Icon","Default","mergeOptions","iconUrl","iconRetinaUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","tooltipAnchor","shadowSize","classNamePrefix","include","_needsInit","_getIconUrl","name","imagePath","options","_initializeOptions","prototype","call","_setOptions","_detectIconOptions","_detectDivOverlayOptions","detectorFn","prefix","optionValues","optionName","className","el","DomUtil","create","document","body","urlsContainer","_getBkgImageOrCursor","urls","_extractUrls","iconX","_getStyleInt","iconY","anchorNX","anchorNY","parentNode","removeChild","Url","RetinaUrl","Size","Anchor","anchorX","anchorY","re","m","exec","push","_stripPath","url","substr","lastIndexOf","style","parseInt","_getStyle","getStyle","_kebabToCamelCase","bkgImage","prop","replace","str","w","toUpperCase"],"sources":["C:/gitrepos/carnaval/node_modules/leaflet-defaulticon-compatibility/dist/leaflet-defaulticon-compatibility.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('leaflet')) :\n\ttypeof define === 'function' && define.amd ? define(['leaflet'], factory) :\n\t(factory(global.L));\n}(this, (function (L) { 'use strict';\n\n\tL.Icon.Default.mergeOptions({\n\t\t// Erase default options, so that they can be overridden by _initializeOptions if not supplied.\n\t\ticonUrl: null,\n\t\ticonRetinaUrl: null,\n\t\tshadowUrl: null,\n\t\ticonSize: null,\n\t\ticonAnchor: null,\n\t\tpopupAnchor: null,\n\t\ttooltipAnchor: null,\n\t\tshadowSize: null,\n\n\t\t// @option classNamePrefix: String = 'leaflet-default-icon-'\n\t\t// Prefix for the classes defined in CSS that contain the Icon options.\n\t\t// See the leaflet-defaulticon-compatibility.css file as a starter.\n\t\t// Expected suffixes are \"icon\", \"shadow\", \"popup\" and \"tooltip\".\n\t\tclassNamePrefix: 'leaflet-default-icon-',\n\t});\n\n\n\tL.Icon.Default.include({\n\n\t\t_needsInit: true,\n\n\t\t// Override to make sure options are retrieved from CSS.\n\t\t_getIconUrl: function (name) {\n\t\t\t// @option imagePath: String\n\t\t\t// `Icon.Default` will try to auto-detect the location of\n\t\t\t// the blue icon images. If you are placing these images in a\n\t\t\t// non-standard way, set this option to point to the right\n\t\t\t// path, before any marker is added to a map.\n\t\t\t// Caution: do not use this option with inline base64 image(s).\n\t\t\tvar imagePath = this.options.imagePath || L.Icon.Default.imagePath || '';\n\t\t\t// Deprecated (IconDefault.imagePath), backwards-compatibility only\n\n\t\t\tif (this._needsInit) {\n\t\t\t\t// Modifying imagePath option after _getIconUrl has been called\n\t\t\t\t// once in this instance of IconDefault will no longer have any\n\t\t\t\t// effect.\n\t\t\t\tthis._initializeOptions(imagePath);\n\t\t\t}\n\n\t\t\treturn imagePath + L.Icon.prototype._getIconUrl.call(this, name);\n\t\t},\n\n\t\t// Initialize all necessary options for this instance.\n\t\t_initializeOptions: function (imagePath) {\n\t\t\tthis._setOptions('icon', _detectIconOptions, imagePath);\n\t\t\tthis._setOptions('shadow', _detectIconOptions, imagePath);\n\t\t\tthis._setOptions('popup', _detectDivOverlayOptions);\n\t\t\tthis._setOptions('tooltip', _detectDivOverlayOptions);\n\t\t\tthis._needsInit = false;\n\t\t},\n\n\t\t// Retrieve values from CSS and assign to this instance options.\n\t\t_setOptions: function (name, detectorFn, imagePath) {\n\t\t\tvar options = this.options,\n\t\t\t    prefix = options.classNamePrefix,\n\t\t\t    optionValues = detectorFn(prefix + name, imagePath);\n\n\t\t\tfor (var optionName in optionValues) {\n\t\t\t\toptions[name + optionName] = options[name + optionName] || optionValues[optionName];\n\t\t\t}\n\t\t}\n\n\t});\n\n\n\t// Retrieve icon option values from CSS (icon or shadow).\n\tfunction _detectIconOptions(className, imagePath) {\n\t\tvar el = L.DomUtil.create('div',  className, document.body),\n\t\t    urlsContainer = _getBkgImageOrCursor(el),\n\t\t    urls = _extractUrls(urlsContainer, imagePath),\n\t\t    iconX = _getStyleInt(el, 'width'),\n\t\t    iconY = _getStyleInt(el, 'height'),\n\t\t    anchorNX = _getStyleInt(el, 'margin-left'),\n\t\t    anchorNY = _getStyleInt(el, 'margin-top');\n\n\t\tel.parentNode.removeChild(el);\n\n\t\treturn {\n\t\t\tUrl: urls[0],\n\t\t\tRetinaUrl: urls[1],\n\t\t\tSize: [iconX, iconY],\n\t\t\tAnchor: [-anchorNX, -anchorNY]\n\t\t};\n\t}\n\n\t// Retrieve anchor option values from CSS (popup or tooltip).\n\tfunction _detectDivOverlayOptions(className) {\n\t\tvar el = L.DomUtil.create('div', className, document.body),\n\t\t    anchorX = _getStyleInt(el, 'margin-left'),\n\t\t    anchorY = _getStyleInt(el, 'margin-top');\n\n\t\tel.parentNode.removeChild(el);\n\n\t\treturn {\n\t\t\tAnchor: [anchorX, anchorY]\n\t\t};\n\t}\n\n\t// Read the CSS url (could be path or inline base64), may be multiple.\n\t// First: normal icon\n\t// Second: Retina icon\n\tfunction _extractUrls(urlsContainer, imagePath) {\n\t\tvar re = /url\\(['\"]?([^\"']*?)['\"]?\\)/gi, // Match anything between url( and ), possibly with single or double quotes.\n\t\t    urls = [],\n\t\t    m = re.exec(urlsContainer);\n\n\t\twhile (m) {\n\t\t\t// Keep the entire URL from CSS rule, so that each image can have its own full URL.\n\t\t\t// Except in the case imagePath is provided: remove the path part (i.e. keep only the file name).\n\t\t\turls.push(imagePath ? _stripPath(m[1]) : m[1]);\n\t\t\tm = re.exec(urlsContainer);\n\t\t}\n\n\t\treturn urls;\n\t}\n\n\t// Remove anything before the last slash (/) occurrence (inclusive).\n\t// Caution: will give unexpected result if url is inline base64 data\n\t// => do not specify imagePath in that case!\n\tfunction _stripPath(url) {\n\t\treturn url.substr(url.lastIndexOf('/') + 1);\n\t}\n\n\tfunction _getStyleInt(el, style) {\n\t\treturn parseInt(_getStyle(el, style), 10);\n\t}\n\n\t// Factorize style reading fallback for IE8.\n\tfunction _getStyle(el, style) {\n\t\treturn L.DomUtil.getStyle(el, style) || L.DomUtil.getStyle(el, _kebabToCamelCase(style));\n\t}\n\n\t// When Firefox high contrast (colours override) option is enabled,\n\t// \"background-image\" is overridden by the browser as \"none\".\n\t// In that case, fallback to \"cursor\". But keep \"background-image\"\n\t// as primary source because IE expects cursor URL as relative to HTML page\n\t// instead of relative to CSS file.\n\tfunction _getBkgImageOrCursor(el) {\n\t\tvar bkgImage = _getStyle(el, 'background-image');\n\n\t\treturn bkgImage && bkgImage !== 'none' ? bkgImage : _getStyle(el, 'cursor');\n\t}\n\n\t// Convert kebab-case CSS property name to camelCase for IE currentStyle.\n\tfunction _kebabToCamelCase(prop) {\n\t\treturn prop.replace(/-(\\w)/g, function (str, w) {\n\t\t\treturn w.toUpperCase();\n\t\t});\n\t}\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
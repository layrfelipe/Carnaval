{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitrepos\\\\carnaval\\\\src\\\\overlays\\\\MarkerOverlay.tsx\";\nimport { Marker, Popup } from 'react-leaflet';\nimport styles from '../styles/Popup.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MarkerOverlay(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.active && props.events.map(marker => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: marker.position,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.container,\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: marker.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_c = MarkerOverlay;\nexport default MarkerOverlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarkerOverlay\");","map":{"version":3,"names":["Marker","Popup","styles","MarkerOverlay","props","active","events","map","marker","position","container","name"],"sources":["C:/gitrepos/carnaval/src/overlays/MarkerOverlay.tsx"],"sourcesContent":["import { Marker, Popup } from 'react-leaflet';\r\nimport { LatLngExpression } from 'leaflet';\r\n\r\nimport styles from '../styles/Popup.module.scss';\r\n\r\ninterface IEventMarker {\r\n    id: number;\r\n    name: string;\r\n    position: LatLngExpression;\r\n    type: number;\r\n    begins_at: Date;\r\n}\r\n\r\ninterface IMarkerOverlayProps {\r\n    name: string;\r\n    events: IEventMarker[];\r\n    active: boolean;\r\n}\r\n\r\nfunction MarkerOverlay(props: IMarkerOverlayProps) {\r\n    return(\r\n        <>\r\n            {props.active &&\r\n                props.events.map( marker => {\r\n                    return(\r\n                        <Marker position={marker.position}>\r\n                            <Popup>\r\n                                <div className={styles.container}>\r\n                                    <h1>{marker.name}</h1>\r\n                                </div>\r\n                            </Popup>\r\n                        </Marker>\r\n                    );\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MarkerOverlay;"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AAGA,OAAOC,MAAP,MAAmB,6BAAnB;;;;AAgBA,SAASC,aAAT,CAAuBC,KAAvB,EAAmD;EAC/C,oBACI;IAAA,UACKA,KAAK,CAACC,MAAN,IACGD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAkBC,MAAM,IAAI;MACxB,oBACI,QAAC,MAAD;QAAQ,QAAQ,EAAEA,MAAM,CAACC,QAAzB;QAAA,uBACI,QAAC,KAAD;UAAA,uBACI;YAAK,SAAS,EAAEP,MAAM,CAACQ,SAAvB;YAAA,uBACI;cAAA,UAAKF,MAAM,CAACG;YAAZ;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ;IASH,CAVD;EAFR,iBADJ;AAiBH;;KAlBQR,a;AAoBT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}